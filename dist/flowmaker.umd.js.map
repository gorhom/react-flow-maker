{"version":3,"file":"flowmaker.umd.js","sources":["../src/logic.js","../src/flowTree.js","../src/utils.js","../src/icons.js","../src/addbutton.js","../src/tooltip.js","../src/input.js","../src/block.js","../src/graphPart.js","../flowmaker.js"],"sourcesContent":["export default class Logic {\n  constructor() {\n    this.conf = {\n      components: {},\n      introComponents: [],\n    }\n    this.errors = []\n  }\n  title(compoentName) {\n    return this.conf.components[compoentName].title\n  }\n  get() {\n    return this.conf\n  }\n  parseNewLogic(input) {\n    const outErrs = []\n    const warn = (...data) => {\n      outErrs.push(data.join(' '))\n      console.log(\"logic parse warning:\", ...data)\n    }\n\n    let conf = {\n      components: {},\n      introComponents: [],\n    }\n\n    if (input.components) {\n      if (Array.isArray(input.components)) {\n        input.components.map((component, i) => {\n          if (!component.name || !component.title) {\n            warn(`logic.components[${i}] does not have a name or title field, this component will be ignored`)\n            return\n          }\n          \n          const alreadyUsedNames = []\n\n          let toInsert = {\n            name: component.name,\n            title: component.title,\n            next: component.next ? Array.isArray(component.next) ? component.next : [component.next] : [],\n            tooltip: component.tooltip,\n            inputs: [],\n            advancedInputs: [],\n          }\n\n          if (Array.isArray(component.inputs)) {\n            component.inputs.map((input, inputID) => {\n              if (!input.title || !input.name || !input.type) {\n                warn(`logic.components[${i}].inputs[${inputID}] does not have a name, type or title field, this input will be ignored`)\n                return\n              }\n\n              if (typeof input.validation != 'function' && typeof input.validation != 'undefined') {\n                warn(`logic.components[${i}].inputs[${inputID}].validation must be undefined or a function`)\n                return\n              }\n              \n              if (typeof input.tooltip != 'string' && input.tooltip !== undefined) {\n                warn(`logic.components[${i}].inputs[${inputID}].tooltip must be a string or not undefined`)\n                return\n              }\n\n              if (alreadyUsedNames.indexOf(input.name) != -1) {\n                warn(`logic.components[${i}].inputs[${inputID}].name can't be equal to other names`)\n                return\n              }\n\n              let toReturn = {\n                name: input.name,\n                title: input.title,\n                type: input.type,\n                validation: input.validation,\n                tooltip: input.tooltip,\n                default: input.default,\n              }\n\n              switch (input.type) {\n                case 'text':\n                  if (typeof input.default != 'string' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a string or undefined, using default empty string`)\n                    toReturn.default = ''\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = ''\n                  }\n                  break;\n                case 'number':\n                  if (typeof input.default != 'number' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a number or undefined, using default 0`)\n                    toReturn.default = 0\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = 0\n                  }\n                  break;\n                case 'switch':\n                  if (typeof input.default != 'boolean' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a boolean or undefined, using default empty string`)\n                    toReturn.default = false\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = false\n                  }\n                  break;\n                case 'dropdown':\n                  if (!Array.isArray(input.options)) {\n                    warn(`logic.components[${i}].inputs[${inputID}].options is not defined or is not an array, skipping this item`)\n                    return\n                  } else {\n                    toReturn['options'] = input.options.map((option, optionID) => {\n                      if (typeof option.title != 'string' || typeof option.value != 'string' || (typeof option.tooltip != 'string' && option.tooltip != undefined)) {\n                        warn(`logic.components[${i}].inputs[${inputID}].options[${optionID}] does not have the correct items (title string, value string, tooltip string), skipping this item`)\n                        return\n                      }\n                      return {\n                        title: option.title,\n                        tooltip: option.tooltip,\n                        value: option.value,\n                      }\n                    }).filter(item => item)\n                  }\n                  break;\n                default:\n                  warn(`logic.components[${i}].inputs[${inputID}].type = '${input.type}' is not valid, this input will be ignored`)\n                  return\n              }\n\n              alreadyUsedNames.push(input.name)\n              toInsert[input.advanced ? 'advancedInputs' : 'inputs'].push(toReturn)\n              return\n            })\n          }\n\n          conf.components[component.name] = toInsert\n        })\n        Object.keys(conf.components).map(key => {\n          conf.components[key].next = conf.components[key].next.filter(componentKey => {\n            if (conf.components[componentKey]) {\n              return true\n            }\n            warn(`logic.component[???].next contains '${componentKey}' that does not exsist, this item will be ignored`)\n            return false\n          })\n        })\n      } else {\n        warn(`logic.components is not an array`) \n      }\n    }\n\n    if (input.introComponents) {\n      if (Array.isArray(input.introComponents)) {\n        input.introComponents.map(name => {\n          if (conf.components[name]) {\n            conf.introComponents.push(name)\n          } else {\n            warn(`logic.introComponents['${name}'] is not a known component`) \n          }\n        })\n      } else if (typeof input.introComponents == 'string') {\n        if (conf.components[input.introComponents]) {\n          conf.introComponents.push(input.introComponents)\n        } else {\n          warn(`logic.introComponents = '${name}' is not a known component`) \n        }\n      } else {\n        warn(`logic.introComponents is not an array or string`) \n      }\n    }\n\n    this.errors = outErrs\n    this.conf = conf\n    return conf\n  }\n}\n","import utils from './utils'\n\nexport default class Tree {\n  constructor(Logic, FlowMaker) {\n    this.Logic = Logic\n    this.FlowMaker = FlowMaker\n    this.maxDepth = 0\n    this.flow = []\n    \n    this.exportBuzzy = false\n    this.reExport = false\n\n    this.exportFunc = undefined\n  }\n\n  setExportFunc(func) {\n    this.exportFunc = func\n  }\n\n  caclMaxDepth() {\n    const vm = this\n    this.maxDepth = 0\n\n    const loopOverNext = next => {\n      next.map(item => {\n        if (item.depth > vm.maxDepth) {\n          vm.maxDepth = item.depth\n        }\n        loopOverNext(item.next)\n      })\n    }\n    loopOverNext(this.flow)\n  }\n\n  flowItem(component, lastIds, currentDepth) {\n    const id = utils.RandomString(20)\n    return {\n      depth: currentDepth + 1,\n      next: [],\n      id: id,\n      path: [...lastIds, id],\n      inputData: {},\n      inputValidation: {},\n      component,\n    }\n  }\n\n  startFlow(componentName) {\n    let component = this.Logic.conf.components[componentName]\n    if (!component) {\n      return\n    }\n\n    this.flow.push(this.flowItem(component, [], 0))\n    this.caclMaxDepth()\n    this.FlowMaker.forceUpdate()\n    this.export()\n  }\n\n  addComponent(componentName, path) {\n    let component = this.Logic.conf.components[componentName]\n    if (!component) {\n      return\n    }\n\n    let toAppendOn = this.findPath(path)\n    toAppendOn.next.push(this.flowItem(component, toAppendOn.path, toAppendOn.depth))\n\n    this.caclMaxDepth()\n    this.FlowMaker.forceUpdate()\n    this.export()\n  }\n\n  findPath(path) {\n    let toReturn = undefined\n    const loopOverNext = next => {\n      for (let i = 0; i < next.length; i++) {\n        if (next[i].path === path) {\n          toReturn = next[i]\n          break\n        }\n        loopOverNext(next[i].next)\n      }\n    }\n    loopOverNext(this.flow)\n    return toReturn\n  }\n\n  removeComponent(path) {\n    const loopOverNext = next => {\n      for (let i = 0; i < next.length; i++) {\n        if (next[i].path === path) {\n          next.splice(i, 1)\n          break\n        }\n        loopOverNext(next[i].next)\n      }\n    }\n    loopOverNext(this.flow)\n\n    this.caclMaxDepth()\n    this.FlowMaker.forceUpdate()\n    this.export()\n  }\n\n  export() {\n    if (!this.exportBuzzy) {\n      this.exportBuzzy = true\n      \n      setTimeout(() => {\n        if (this.reExport) {\n          this.exportBuzzy = false\n          this.reExport = false\n          this.export()\n          return\n        }\n\n        let toExport = []\n      \n        const mapOverNext = (posInExpo, next) => {\n          next.map(item => {\n            const componentName = item.component.name\n            posInExpo.push({\n              component: {\n                title: item.component.title,\n                name: item.component.name\n              },\n              inputs: Object.keys(item.inputData).reduce((acc, i) => {\n                acc[i] = item.inputData[i].value\n                return acc\n              }, {}),\n              id: item.id,\n              next: [],\n            })\n            mapOverNext(posInExpo[posInExpo.length-1].next, item.next)\n          })\n        } \n\n        mapOverNext(toExport, this.flow)\n\n        if (typeof this.exportFunc == 'function') {\n          this.exportFunc(toExport)\n        }\n\n        setTimeout(() => {\n          this.exportBuzzy = false\n          if (this.reExport) {\n            this.reExport = false\n            this.export()\n          }  \n        }, 30)\n      }, 50)\n    } else {\n      this.reExport = true\n    }\n  }\n\n  import(flow) {\n    if (!Array.isArray(flow)) {\n      return\n    }\n\n    let newFlow = []\n\n    const mapOverFlow = (arr, mapTo, lastIds) => {\n      arr.map(item => {\n        let toPush = this.flowItem(this.Logic.conf.components[item.component.name], lastIds, lastIds.length)\n        \n        toPush.id = item.id\n        toPush.inputData = Object.keys(item.inputs).reduce((acc, i) => {\n          acc[i] = {\n            value: item.inputs[i],\n            error: ''\n          }\n          return acc\n        }, {})\n        toPush.path.splice(-1,1)\n        toPush.path.push(item.id)\n        mapTo.push(toPush)\n\n        mapOverFlow(item.next, mapTo[mapTo.length-1].next, [...lastIds, item.id])\n      })\n    }\n    mapOverFlow(flow, newFlow, [])\n\n    this.flow = newFlow\n    this.caclMaxDepth()\n    this.FlowMaker.forceUpdate()\n  }\n\n  updateInputValue(path, value, field, isAdvanced) {\n    let component = this.findPath(path)\n\n    if (component) {\n      if (!isAdvanced) {\n        if (component.component.inputs && component.component.inputs[field]) {\n          const input = component.component.inputs[field]\n          component.inputData[input.name] = value\n        }\n      } else {\n        if (component.component.advancedInputs && component.component.advancedInputs[field]) {\n          const input = component.component.advancedInputs[field]\n          component.inputData[input.name] = value\n        }\n      }\n    }\n\n    this.export()\n  }\n} \n","export default {\n  RandomString(length) {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  \n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    \n    return text;\n  }\n}\n","import React from 'react'\n\nexport const Add = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\nexport const Delete = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z\"/></svg>\nexport const DropDown = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M8.71 11.71l2.59 2.59c.39.39 1.02.39 1.41 0l2.59-2.59c.63-.63.18-1.71-.71-1.71H9.41c-.89 0-1.33 1.08-.7 1.71z\"/></svg>\nexport const DropUp = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M8.71 12.29L11.3 9.7c.39-.39 1.02-.39 1.41 0l2.59 2.59c.63.63.18 1.71-.71 1.71H9.41c-.89 0-1.33-1.08-.7-1.71z\"/></svg>\nexport const Info = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 15c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1-8h-2V7h2v2z\"/></svg>\nexport const Check = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\n","import React from 'react'\nimport {Add} from './icons'\n\nexport default class AddButton extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      open: false,\n    }\n  }\n  clickRoundButton() {\n    this.setState({\n      open: !this.state.open,\n    })\n  }\n  clickOption(option) {\n    this.props.out(option)\n    this.setState({\n      open: false\n    })\n  }\n  render() {\n    const p = this.props\n    const s = this.state\n    return (\n      <div className=\"addIcon\">\n        <div className={`round ${s.open ? 'open' : 'closed'}`} onClick={() => this.clickRoundButton()}>\n          <Add/>\n        </div>\n        <div className={`options ${s.open ? 'open' : 'closed'}`}>\n          {p.options ? p.options.map((option, id) => \n            <div onClick={() => this.clickOption(option)} key={id} className=\"option\">\n              {this.props ? this.props.Logic.title(option) : option}\n            </div>\n          ):''}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {Info} from './icons'\n\nexport default class ToolTip extends React.Component {\n  render() {\n    if (!this.props.tip) {\n      return ''\n    }\n\n    return (\n      <div className={`tooltip transparrent${this.props.transparrent ? 'True' : 'False'}`}>\n        <div className=\"icon\">\n          <Info/>\n        </div>\n        <div className=\"noWidth\">\n          <div className=\"fullwidth\">\n            <div className=\"popup\">\n              {this.props.tip}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {DropDown, Check} from './icons'\nimport ToolTip from './tooltip'\n\nexport default class Input extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      value: '',\n      error: '',\n      dropDownSelected: -1,\n      isAfterInit: false,\n      dropDownopen: false,\n    }\n  }\n\n  tellParent() {\n    if (this.props.onChange) {\n      this.props.onChange({\n        error: this.state.error,\n        value: this.state.value,\n      })\n    }\n  }\n\n  updateDefaultVal() {\n    if (this.props.input && !this.state.isAfterInit) {\n      const defaultInput = typeof this.props.initalVal != 'undefined' ? this.props.initalVal : this.props.input.default\n\n      this.setState({\n        value: defaultInput,\n        isAfterInit: true,\n      }, () => {\n        this.validate(defaultInput, () => {\n          if (this.props.input.type == 'dropdown' && this.state.dropDownSelected == -1) {\n            let dropDownSelected = 0\n            this.props.input.options.map((option, id) => {\n              if (option.value == defaultInput) {\n                dropDownSelected = id\n              }\n            })\n            this.setState({\n              dropDownSelected\n            })\n          }\n          this.tellParent()\n        })\n      })\n    }\n  }\n\n  validate(newVal, cb) {\n    if (typeof this.props.input.validation == 'function') {\n      let error = this.props.input.validation(undefined, newVal)\n      if (typeof error != 'string') {\n        error = ''\n      }\n      this.setState({\n        error\n      }, cb)\n    }\n    if (typeof cb == 'function') {\n      cb()\n    }\n  }\n\n  updateValue(newVal) {\n    this.setState({value: newVal}, () => {\n      this.validate(newVal, () => {\n        this.tellParent()\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.updateDefaultVal()\n  }\n\n  componentDidUpdate() {\n    this.updateDefaultVal()\n    if (this.props.hiddenDropdown && this.state.dropDownopen) {\n      this.setState({\n        dropDownopen: false,\n      })\n    }\n  }\n  \n  render() {\n    const error = this.state.error\n    const input = this.props.input\n    if (!input) {\n      return (<div className=\"input\"></div>)\n    }\n\n    return (\n      <div className={`input hasErr${error ? 'True' : 'False'}`}>\n        <div className=\"label\"><span>{input.title}</span><ToolTip transparrent={true} tip={input.tooltip}/></div>\n        <div className=\"actualInput\">\n          {(input.type == 'text' || input.type == 'number')?\n            <div className=\"text\">\n              <input type={input.type} value={this.state.value} onChange={e => this.updateValue(e.target.value)}/>\n            </div>\n          :input.type == 'switch'?\n            <div className=\"switch\">\n              <div \n                onClick={() => this.updateValue(!this.state.value)} \n                className={`actualSwitch ${this.state.value ? 'true' : 'false'}`}\n              ><div className=\"inside\"><Check/></div></div>\n            </div>\n          :input.type == 'dropdown'?\n            <div className=\"dropdown\">\n              <div className=\"select\" onClick={() => this.setState({dropDownopen: !this.state.dropDownopen})}>\n                <div className=\"optTitle\">{this.state.dropDownSelected == -1 ? '...' : input.options[this.state.dropDownSelected].title}</div>\n                <div className=\"icon\">\n                  <DropDown/>\n                </div>\n              </div>\n              <div className={`options open${this.state.dropDownopen ? 'True' : 'False'}`}>\n                {input.options.map((option, optionID) => \n                  <div \n                    key={optionID} \n                    className=\"option\"\n                    onClick={() => {\n                      console.log('dropdown: start:', option.value)\n                      this.updateValue(option.value)\n                      this.setState({\n                        dropDownSelected: optionID,\n                        dropDownopen: false,\n                      })\n                    }}\n                  >\n                    <div className=\"optTitle\">{option.title}</div>\n                    <ToolTip tip={option.tooltip}/>\n                  </div>\n                )}\n              </div>\n            </div>\n          :''}\n        </div>\n        {error?\n          <div className=\"error\">{error}</div>\n        :''}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Input from './input'\nimport {Delete, Add, DropDown, DropUp} from './icons'\nimport ToolTip from './tooltip'\n\nexport default class Block extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      hover: false,\n      showAddOptions: false,\n      showAdvanced: false,\n    }\n\n    this.remove = this.remove.bind(this)\n  }\n  remove() {\n    this.props.Tree.removeComponent(this.props.data.path)\n  }\n  add() {\n\n    if (this.props.data.component.next.length == 1) {\n      this.realAdd(this.props.data.component.next[0])\n      return\n    }\n\n    this.setState({\n      showAddOptions: true,\n    })\n  }\n  realAdd(toAdd) {\n    this.setState({\n      showAddOptions: false,\n    })\n\n    if (!toAdd) {\n      return\n    }\n\n    this.props.Tree.addComponent(toAdd, this.props.data.path)\n  }\n  render() {\n    const data = this.props.data\n    if (!data) {\n      return ''\n    }\n    const comp = data.component\n    const inputs = comp.inputs\n    const advancedInputs = comp.advancedInputs\n\n    return (\n      <div \n        className={`fullBlock hover${this.state.hover && !this.state.showAddOptions ? 'True' : 'False'}`}\n        onMouseOver={() => this.setState({hover: true})}\n        onMouseOut={() => this.setState({hover: false})}\n      >\n        <div className=\"side\">\n          <div className=\"innerSide\">\n            <div className=\"round\" onClick={this.remove}>\n              <Delete/>\n            </div>\n          </div>\n        </div>\n        <div className=\"middle\">\n          <div className=\"title\">{comp.title}<ToolTip transparrent={true} tip={comp.tooltip}/></div>\n          <div className=\"inputs\">\n            {inputs.map((input, inputID) => {\n              const inputData = data.inputData[input.name]\n              return (\n                <Input\n                  key={inputID}\n                  input={input}\n                  initalVal={inputData ? inputData.value : undefined}\n                  onChange={inputData => {\n                    this.props.Tree.updateInputValue(data.path, inputData, inputID, false)\n                  }}\n                />\n              )\n            })}\n            {advancedInputs.length > 0?\n              <div className=\"showAdvanced\">\n                <div \n                  className=\"button\"\n                  onClick={() => {\n                    this.setState({showAdvanced: !this.state.showAdvanced}, () => {\n                      if (this.props.graphParrentInstance) {\n                        this.props.graphParrentInstance.forceUpdate()\n                      } else if (this.props.graphInstance) {\n                        this.props.graphInstance.forceUpdate()\n                      }\n                    })\n                  }}\n                >Advanced {this.state.showAdvanced ? <DropUp/> : <DropDown/>}</div>\n              </div>\n            :''}\n          </div>\n          <div className={`inputs advancedInputs show${this.state.showAdvanced ? 'True' : 'False'}`}>\n            {advancedInputs.map((input, inputID) => {\n              const inputData = data.inputData[input.name]\n              return (\n                <Input\n                  hiddenDropdown={!this.state.showAdvanced}\n                  key={inputID}\n                  input={input}\n                  initalVal={inputData ? inputData.value : undefined}\n                  onChange={inputData => {\n                    this.props.Tree.updateInputValue(data.path, inputData, inputID, true)\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n        {comp.next.length > 0 ?\n          <div className={`nextOptions show${this.state.showAddOptions ? 'True' : 'False'}`}>\n            <div className=\"closePopup\" onClick={() => this.realAdd()}>\n              <Add/>\n            </div>\n            <div className=\"pos\">\n              <div className=\"optionsTitle\">Options</div>\n              {comp.next.map((componentName, key) => \n                <div \n                  onClick={() => this.realAdd({componentName})} \n                  className=\"option\" \n                  key={key}\n                >{this.props ? this.props.Logic.title(componentName) : componentName}</div>\n              )}\n            </div>\n          </div>\n        :''}\n        {comp.next.length > 0 ?\n          <div className=\"side\">\n            <div className=\"innerSide\">\n              <div className=\"round\" onClick={() => this.add()}>\n                <Add/>\n              </div>\n            </div>\n          </div>\n        :''}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Block from './block'\n\nconst GraphPartClass = class GraphPart extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      element: undefined,\n      lastParentPosition: 0,\n    }\n    \n    this.mounted = false\n  }\n\n  componentDidMount() {\n    this.mounted = true\n    this.watchParent()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  watchParent() {\n    if (this.mounted) {\n      let parentEl = this.props.connectTo\n      let parent = undefined\n      if (parentEl) {\n        parent = parentEl.getBoundingClientRect()\n        if (parent.top != this.state.lastParentPosition) {\n          this.setState({\n            lastParentPosition: parent.top\n          })\n        }\n      }\n      setTimeout(() => {\n        this.watchParent()\n      }, 800)\n    }\n  }\n\n  render() {\n    let parentLineHeight = 0\n    let parentLineToTop = 0\n    let type = ''\n\n    if (this.props.connectTo && this.state.element) {\n      let parent = this.props.connectTo.getBoundingClientRect()\n      let child = this.state.element.getBoundingClientRect()\n      let spaceBetween = (parent.y + (parent.height / 2)) - (child.y + (child.height / 2))  \n\n      if (spaceBetween == 0) {\n        parentLineHeight = 20\n        parentLineToTop = 10\n        type = 'straight'\n      } else if (spaceBetween < 0) {\n        parentLineHeight = ((-spaceBetween) + 20)\n        parentLineToTop = parentLineHeight - 10\n        type = 'bottomToTop'\n      } else {\n        parentLineHeight = spaceBetween + 20\n        parentLineToTop = 10\n        type = 'topToBottom'\n      }\n    }\n    return (\n      <div className=\"graphPart\" style={{width: this.props.width}}>\n        {parentLineHeight && parentLineToTop && type ?\n          <div className=\"lineToParrent\" style={{bottom: `${parentLineToTop}px`}}>\n            <svg viewBox={`0 0 80 ${parentLineHeight}`} height={`${parentLineHeight}px`} style={{minHeight: `${parentLineHeight}px`}} xmlns=\"http://www.w3.org/2000/svg\">\n              { type == 'bottomToTop' ?\n                <path\n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d={`M0,10 C70,10 30,${parentLineHeight-10} 80,${parentLineHeight-10}`}\n                />\n              : type == 'topToBottom' ?\n                <path \n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d={`M0,${parentLineHeight-10} C70,${parentLineHeight-10} 30,10 80,10`}\n                />\n              : \n                <path \n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d=\"M0,10 C70,10 30,10 80,10\"\n                />\n              }\n            </svg>\n          </div>\n        :''}\n        <div\n          ref={element => {\n            \n            let parentEl = this.props.connectTo\n            let parent = undefined\n            if (parentEl) {\n              parent = parentEl.getBoundingClientRect()\n            }\n\n            if (typeof this.state.element == 'object') {\n              if (!parent || parent.top == this.state.lastParentPosition) {\n                return\n              }\n            }\n\n            let toUpdate = {\n              element,\n            }\n\n            if (parent) {\n              toUpdate.lastParentPosition = parent.top\n            }\n\n            this.setState(toUpdate)\n          }} \n          className=\"graph\" \n          style={{minWidth: this.props.itemWidth}}\n        >\n          <Block \n            graphInstance={this} \n            graphParrentInstance={this.props.connectToInstance}\n            Tree={this.props.Tree} \n            Logic={this.props.Logic} \n            data={this.props.data}\n          />\n        </div>\n        <div className=\"next\">\n          {this.props.data.next.map((item, i) => \n            <GraphPartClass \n              Tree={this.props.Tree} \n              Logic={this.props.Logic} \n              connectTo={this.state.element}\n              connectToInstance={this}\n              width={this.props.width - this.props.itemWidth} \n              itemWidth={this.props.itemWidth}\n              key={i} \n              data={item}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GraphPartClass\n","import React from 'react'\nimport './style.styl'\nimport Logic from './src/logic'\nimport Tree from './src/flowTree'\nimport AddButton from './src/addbutton'\nimport GraphPart from './src/graphPart'\nimport sha1 from 'js-sha1'\n\nexport default class FlowMaker extends React.Component {\n  constructor() {\n    super()\n\n    this.Logic = new Logic()\n    this.Tree = new Tree(this.Logic, this)\n\n    this.lastlogicHash = ''\n    this.state = {\n      settings: this.Logic.get(),\n    }\n  }\n\n  componentDidMount() {\n    const newHash = sha1(this.props.logic)\n    if (newHash != this.lastlogicHash) {\n      this.lastlogicHash = newHash\n      this.setState({\n        settings: this.Logic.parseNewLogic(this.props.logic)\n      }, () => this.afterMount())\n    } else {\n      this.afterMount()\n    }\n  }\n\n  afterMount() {\n    if (typeof this.props.onChange == 'function')\n      this.Tree.setExportFunc(this.props.onChange)\n    if (typeof this.props.flow == 'object')\n      this.Tree.import(this.props.flow)\n  }\n\n  render() {\n    const s = this.state.settings\n\n    return (\n      <div className=\"flowMakerComp\">\n        <div className=\"flowMakerContainer\" style={{minWidth: `${250 + (380 * this.Tree.maxDepth)}px`}}>\n          <div className=\"row\" style={{minWidth: '250px'}}>\n            {s.introComponents.length > 0 ?\n              <div className=\"startPoint\">\n                <h3>Start here</h3>\n                <AddButton\n                  Tree={this.Tree}\n                  Logic={this.Logic}\n                  options={s.introComponents}\n                  out={componentName => this.Tree.startFlow(componentName)}\n                />\n              </div>\n            :''}\n          </div>\n\n          <div className=\"actualGraph\" style={{width: `${380 * this.Tree.maxDepth}px`}}>\n            {this.Tree.flow.map((item, i) => \n              <GraphPart\n                Tree={this.Tree} \n                Logic={this.Logic}\n                width={380 * this.Tree.maxDepth} \n                itemWidth={380} \n                key={i} \n                data={item}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":["Logic","constructor","conf","errors","title","compoentName","this","components","get","parseNewLogic","input","outErrs","warn","push","data","join","log","Array","isArray","map","component","i","name","alreadyUsedNames","toInsert","next","tooltip","inputs","inputID","type","validation","undefined","indexOf","toReturn","default","options","option","optionID","value","filter","item","advanced","Object","keys","key","componentKey","introComponents","Tree","FlowMaker","maxDepth","flow","exportBuzzy","reExport","exportFunc","setExportFunc","func","caclMaxDepth","vm","loopOverNext","depth","flowItem","lastIds","currentDepth","id","length","text","possible","charAt","Math","floor","random","utils","path","startFlow","componentName","forceUpdate","export","addComponent","toAppendOn","findPath","let","removeComponent","splice","toExport","mapOverNext","posInExpo","inputData","reduce","acc","import","newFlow","mapOverFlow","arr","mapTo","toPush","updateInputValue","field","isAdvanced","advancedInputs","const","Add","React","xmlns","width","height","viewBox","d","fill","Delete","DropDown","DropUp","Info","Check","AddButton","state","open","clickRoundButton","setState","clickOption","props","out","render","p","s","className","onClick","Component","ToolTip","tip","transparrent","Input","error","dropDownSelected","isAfterInit","dropDownopen","tellParent","onChange","updateDefaultVal","defaultInput","initalVal","validate","newVal","cb","updateValue","componentDidMount","componentDidUpdate","hiddenDropdown","e","target","console","Block","hover","showAddOptions","showAdvanced","remove","bind","add","realAdd","toAdd","comp","onMouseOver","onMouseOut","graphParrentInstance","graphInstance","GraphPartClass","element","lastParentPosition","mounted","watchParent","componentWillUnmount","parentEl","connectTo","parent","getBoundingClientRect","top","setTimeout","parentLineHeight","parentLineToTop","child","spaceBetween","y","style","bottom","minHeight","strokeWidth","stroke","strokeLinecap","ref","toUpdate","minWidth","itemWidth","connectToInstance","lastlogicHash","settings","newHash","sha1","logic","afterMount","GraphPart"],"mappings":"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"}